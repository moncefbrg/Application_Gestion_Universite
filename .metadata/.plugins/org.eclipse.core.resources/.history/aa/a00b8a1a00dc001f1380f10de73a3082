package com.example.demo.services.niveau;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.example.demo.entities.Module;
import com.example.demo.entities.Formule;
import com.example.demo.entities.Niveau;
import com.example.demo.entities.Seuil;
import com.example.demo.repositories.IModule;
import com.example.demo.repositories.INiveau;

import jakarta.transaction.Transactional;
@Service
public class NiveauServiceImpl implements INiveauService{
	@Autowired
	private INiveau iNiveau;
	@Autowired
	private IModule iModule;
	@Transactional
	public boolean creerNiveau(Long id,String nom,String alias,Niveau niveauSuivant,List<Module> modules,Seuil seuil,Formule formules)throws Exception {
		Niveau n=new Niveau();
		if(iNiveau.findById(id).isPresent()) { throw new RuntimeException("l'id de  la classe avec "+id+"exsite deja");}else {n.setId(id);}
		if(iNiveau.findByNom(nom).isPresent()) { throw new RuntimeException("le nom de la classe"+nom+"exsite deja");}else {n.setNom(nom);}
		if(iNiveau.findByAlias(alias).isPresent()) { throw new RuntimeException("l'alias de la classe"+alias+"exsite deja");}else {n.setNom(alias);}
		List<String> modl=modules.stream().map(module->module.getName()).filter(module->iModule.findByNom(module).isEmpty()).collect(Collectors.toList());
		if(!(modules.size()==modl.size())) { throw new RuntimeException("un ou plus des modules n'exsitent pas");}else {n.setModules(modules);}

		n.setNiveauSuivant(niveauSuivant);
		
		
		
		return false;
	};

}
